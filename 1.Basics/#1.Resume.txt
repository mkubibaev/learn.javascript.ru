1.Основы JavaScript
	1.1 alert
	1.2 Внешние скрипты, порядок исполнения (async, defer)
	1.3 Структура кода
	1.4 Современный стандарт, "use strict"
	1.5 Переменные
	1.6 Правильный выбор имени переменной
		 - camelCase
	1.7 Шесть типов данных, typeof
		 - number(infinity, NaN),string,boolean,null,undefined,object
	1.8 Основные операторы
		 - «унарный», «бинарный», «операнд»
	1.9 Операторы сравнения и логические значения
		 - В JavaScript есть логические значения true (истина) и false (ложь).Операторы сравнения возвращают их.
		 - Строки сравниваются побуквенно.
		 - Значения разных типов приводятся к числу при сравнении, за исключением строгого равенства === (!==).
		 - Значения null и undefined равны == друг другу и не равны ничему другому. В других сравнениях (с участием >,<) их лучше не использовать, так как они ведут себя не как 0.
	1.10 Побитовые операторы
		  - надо повторить
	1.11 Взаимодействие с пользователем: alert, prompt, confirm
		  - alert выводит сообщение.
		  - prompt выводит сообщение и ждёт, пока пользователь введёт текст, а затем возвращает введённое значение или null, если ввод отменён (CANCEL/Esc).
		  - confirm выводит сообщение и ждёт, пока пользователь нажмёт «OK» или «CANCEL» и возвращает true/false.
	1.12 Условные операторы: if, '?'
		  - Число 0, пустая строка "", null и undefined, а также NaN являются false,
		  - Остальные значения – true.
		  - ? - тернарный оператор
	1.13 Логические операторы || (ИЛИ), && (И) и ! (НЕ)
		  - оператор || вычисляет операнды слева направо до первого «истинного» и возвращает его, а если все ложные – то последнее значение.
		  - оператор && вычисляет операнды слева направо до первого «ложного» и возвращает его, а если все истинные – то последнее значение.
		  - Приоритет у && больше, чем у ||	
		  - двойное !! (НЕ) используют для преобразования значений к логическому типу
	1.14 Преобразование типов для примитивов
		  В JavaScript есть три преобразования:
		  - Строковое: String(value) – в строковом контексте или при сложении со строкой. Работает очевидным образом.
		  - Численное: Number(value) – в численном контексте, включая унарный плюс +value. Происходит при сравнении разных типов, кроме строгого равенства.
		  - Логическое: Boolean(value) – в логическом контексте, можно также сделать двойным НЕ: !!value.
	1.15 Циклы while, for
		  JavaScript поддерживает три вида циклов:
		  while – проверка условия перед каждым выполнением.
		  do..while – проверка условия после каждого выполнения.
		  for – проверка условия перед каждым выполнением, а также дополнительные настройки.
		  Чтобы организовать бесконечный цикл, используют конструкцию while(true). При этом он, как и любой другой цикл, может быть прерван директивой break.
		  Если на данной итерации цикла делать больше ничего не надо, но полностью прекращать цикл не следует – используют директиву continue.
		  Обе этих директивы поддерживают «метки», которые ставятся перед циклом. Метки – единственный способ для break/continue повлиять на выполнение внешнего цикла.
		  Заметим, что метки не позволяют прыгнуть в произвольное место кода, в JavaScript нет такой возможности.
	1.16 Конструкция switch
		  - case проверяет на абсоютное равенство ===
		  - если в верном case нету break, то выполнятся все последующие case без сравнения. 


		  